<?xml version='1.0' encoding='UTF-8'?>
<macros>
    <token name="@WRAPPER_VERSION@">1.0</token>
    <xml name="requirements">
        <requirements>
            <requirement type="package">samtools</requirement>
        </requirements>
    </xml>
    <xml name="stdio">
        <stdio>
            <exit_code range="1:"/>
            <exit_code range=":-1"/>
            <regex match="Error:"/>
            <regex match="Exception:"/>
        </stdio>
    </xml>
    <xml name="non_ready_states">
        #import time
        #set non_ready_states = ['new', 'queued', 'running', 'setting_metadata', 'upload']
    </xml>
    <xml name="single_input_check">
        #while $input.dataset.state in $non_ready_states:
            time.sleep(60)
        #end while
    </xml>
    <xml name="multi_input_check">
        #for $i in $input:
            #while $i.dataset.state in $non_ready_states:
                time.sleep(60)
            #end while
        #end for
    </xml>
    <xml name="single_input_init">
        #set history_id = $__app__.security.encode_id($input.history.id)
        #set history_name = $input.history.name
        #set job = $input.creating_job
    </xml>
    <xml name="single_input_cmd_start">
        #set tool_id = $job.tool_id
        #set tool_parameters = ""
        #for p in $job.parameters:
            #set tool_parameters = $tool_parameters + "__SeP__" + $p.name
            #set tool_parameters = $tool_parameters + "__SeP__" + $p.value
        #end for
        #set workflow_step = None
        #set pjaas = $job.post_job_actions
        #for pjaa in $pjaas:
            #set pja = pjaa.post_job_action
            #set workflow_step = $pja.workflow_step
        #end for
    </xml>
    <xml name="multi_input_cmd_start">
        #set history_id = None
        #set history_name = None
        #set workflow_step = None
    </xml>
    <xml name="single_input_cmd_end">
        --config_file $__tool_directory__/stats_config.ini
        --input "$input"
        --input_id "$__app__.security.encode_id($input.id)"
        --input_datatype "$input.ext"
        --dbkey "$input.metadata.dbkey"
        --history_id "$history_id"
        --history_name "$history_name"
        --tool_id "$tool_id"
        --tool_parameters "$tool_parameters"
        --user_email "$__user_email__"
        #if $workflow_step is not None:
            --workflow_step_id "$__app__.security.encode_id($workflow_step.id)"
        #end if
        --output "$output"
    </xml>
    <xml name="multi_input_cmd_end">
        #for $i in $input:
            #if $history_id is None:
                #set history_id = $__app__.security.encode_id($i.history.id)
                #set history_name = $i.history.name
            #end if
            --input "${i}" "${i.hid}" "$__app__.security.encode_id($i.id)" "$i.ext" "$i.metadata.dbkey"
            #set job = $i.creating_job
            #set tool_id = $job.tool_id
            #set tool_parameters = ""
            #for p in $job.parameters:
                #set tool_parameters = $tool_parameters + "__SeP__" + $p.name
                #set tool_parameters = $tool_parameters + "__SeP__" + $p.value
            #end for
            #if $workflow_step is None:
                #set pjaas = $job.post_job_actions
                #for pjaa in $pjaas:
                    #set pja = pjaa.post_job_action
                    #set workflow_step = $pja.workflow_step
                #end for
            #end if
        #end for
        --config_file $__tool_directory__/stats_config.ini
        --history_id "$history_id"
        --history_name "$history_name"
        --tool_id "$tool_id"
        --tool_parameters "$tool_parameters"
        --user_email "$__user_email__"
        #if $workflow_step is not None:
            --workflow_step_id "$__app__.security.encode_id($workflow_step.id)"
        #end if
        --output "$output"
    </xml>
    <xml name="citations">
        <citations>
            <citation type="bibtex">
                @unpublished{None,
                author = {Greg Von Kuster},
                title = {None},
                year = {None},
                eprint = {None},
                url = {http://www.huck.psu.edu/content/research/independent-centers-excellence/center-for-eukaryotic-gene-regulation}
            }</citation>
        </citations>
    </xml>
</macros>
