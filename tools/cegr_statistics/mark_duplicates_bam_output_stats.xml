<tool id="mark_duplicates_bam_output_stats" name="Mark Duplicates BAM output statistics" version="1.0.0">
    <description></description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <command>
        <![CDATA[
            #import time
            #set non_ready_states = ['new', 'queued', 'running', 'setting_metadata', 'upload']
            #while $input.dataset.state in $non_ready_states:
                time.sleep(60)
            #end while
            #set history_id = $__app__.security.encode_id($input.history.id)
            #set history_name = $input.history.name
            #set job = $input.creating_job
            #set tool_id = $job.tool_id
            #set tool_parameters = ""
            #for p in $job.parameters:
                #set tool_parameters = $tool_parameters + "__SeP__" + $p.name
                #set tool_parameters = $tool_parameters + "__SeP__" + $p.value
            #end for
            python $__tool_directory__/mark_duplicates_bam_output_stats.py
            --config_file $__tool_directory__/stats_config.ini
            --input "$input"
            --input_id "$__app__.security.encode_id($input.id)"
            --input_datatype "$input.ext"
            --dbkey "$input.metadata.dbkey"
            --history_id "$history_id"
            --history_name "$history_name"
            --output "$output"
            --tool_id "$tool_id"
            --tool_parameters "$tool_parameters"
        ]]>
    </command>
    <inputs>
        <param name="input" type="data" format="bam" label="BAM input" >
            <validator type="dataset_ok_validator" />
        </param>
    </inputs>
    <outputs>
        <data name="output" format="txt" />
    </outputs>
    <tests>
    </tests>
    <help>
**What it does**

Generates statistics on the output of the **MarkDuplicates** tool in the **CEGR Galaxy ChIP-exo** pipeline.  These
statistics include mapped reads, uniquely mapped reads, uniquely mapped de-duplicated reads and total reads.  Samtools
is used to generate these statistics using the following commands:

- mapped reads: **samtools view -f 0x40 -F 4 -c**
- uniquely mapped reads: **samtools view -f 0x40 -F 4 -q 5 -c**
- uniquely mapped de-duplicated reads: **samtools view -f 0x41 -F 0x404 -q 5 -c**
- total reads: **samtools view -f 0x40 -c**

A JSON dictionary containing the run, sample and genome reference, along with the above statistics is sent
via a POST to the PEGR REST API where the information is stored to support the CEGR ChIP-exo statistics reports.
    </help>
    <expand macro="citations" />
</tool>
